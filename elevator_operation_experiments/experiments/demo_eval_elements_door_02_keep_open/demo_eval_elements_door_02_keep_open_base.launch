<launch>
    <!-- elevator state publisher -->
    <include file="$(find elevator_operation)/launch/elevator_state_publisher.launch" >
        <arg name="initial_floor" value="7" />
        <arg name="device_type" value="fetch1075_enviii" />
        <arg name="robot_type" value="fetch" />
    </include>

    <!-- doors frame publisher -->
    <include
        file="$(find elevator_operation)/launch/doors_frame_publisher.launch" />

    <!-- door detector -->
    <include file="$(find elevator_operation)/launch/elevator_door_detector.launch">
        <arg name="input_topic_points" value="/head_camera/depth_registered/points" />
        <arg name="elevator_door_frame_id" value="eng2/7f/elevator_door" />
        <arg name="output_topic_door_state" value="/elevator_door_detector/door_state" />
        <arg name="prefix" value="" />
    </include>

    <!-- look at target server -->
    <node pkg="elevator_operation" type="look-at-elevator.l" name="look_at_target_server" output="screen">
        <rosparam subst_value="true">
            robot_type: $(arg robot_type)
        </rosparam>
    </node>

    <!-- plane segmentator -->
    <group>
        <node name="sample_manager" pkg="nodelet" type="nodelet" args="manager" />

        <node name="organized_multi_plane_segmentation" pkg="nodelet" type="nodelet" args="load jsk_pcl/OrganizedMultiPlaneSegmentation sample_manager">
            <remap from="~input" to="/head_camera/depth_registered/points" />
            <rosparam>
              publish_normal: true
            </rosparam>
        </node>

        <node name="normal_concatenater" pkg="nodelet" type="nodelet" args="load jsk_pcl_utils/NormalConcatenater sample_manager">
            <remap from="~input" to="/head_camera/depth_registered/points" />
            <remap from="~normal" to="organized_multi_plane_segmentation/output_normal" />
        </node>
    </group>
</launch>
